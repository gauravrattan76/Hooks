Use state Hook-
____________________________


import React, { Component} from 'react'

class ClassCounter extends Component{
    constructor(props){
        super(props)
        this.state = {
            count:0
        }
        this.incrementCount = this.incrementCount.bind(this);
    }

    incrementCount(){
        this.setState({
            count:this.state.count + 1
        })
    }
    render(){
        return(
            <div>
                <h1>Hello Gaurav {this.state.count}</h1>
                <button onClick={this.incrementCount}>Increment count</button>
            </div>
        )
    }
}

export default ClassCounter



___________

Using Hook

The useState() is a Hook that allows you to have state variables in functional components.

Hooks is a special function which allows you to hook into react features


Use state is  a hook which allows us to use react state to functional components



Syntax: The first element is the initial state and the second one is a function that is used for updating the state.
const [state, setState] = useState(initialstate)


Const [count, setCount] =useState(0)


We can also pass a function as an argument if the initial state has to be computed. And the value returned by the function will be used as the initial state.

const [sum, setsum] = useState(function generateRandomInteger(){5+7);})



import React,{useState} from 'react'

function HookCounter(){
const [count, setCount] = useState(0);

    return(
        <div>
<button onClick={() => setCount(count + 1)}>Count {count}</button>
        </div>
    )
}

export default HookCounter
